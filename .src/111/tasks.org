#+TITLE: 任务和作业




* [2021-03-11 Thu]
:PROPERTIES:
:CUSTOM_ID: active
:END:


写一个小程序，计算工资的税后收入。要求:
- cmd 下面输入 ~程序.exe 税前收入~，然后输出扣税情况和实际税后收入
- 个人所得税的计算，请自行搜索并整理
- 如果输入的税前收入为空，提示用户出错

参考输出:
#+ATTR_HTML: :width 200
[[file:img/oimg_20210311_080143.png]]

简化版的个税方案:
| < 5k   |   0 |
| 5k-1w  |  3% |
| 1w-2w  |  5% |
| 2w-10w | 20% |
| > 10w  | 45% |

其他:
- 写程序要遵循 *多模仿、多动手* 的原则
- 书读百遍其义自见，代码也是一样，多敲自然熟练
- 参考:
  + 个税计算器: https://gerensuodeshui.cn/
  + 个税计算方式: http://jcc.bjmu.edu.cn/docs/20190227173119070720.pdf

[参考] 个人所得税税率表:

#+ATTR_HTML: :width 400
[[file:img/geshui.png]]

小结:
- 到 2021年3月15日，过了 3 天，一共有 11 个人完成

核心代码:
#+begin_src csharp
  // Main 方法是程序的入口
  // args 表示从控制台传来的参数数据
  // 比如，在 CMD 窗口输入 TipCalculator 222 333 444，那么:
  //   - args[0] 就是字符串 222
  //   - args[1] 就是字符串 333
  //   - args[2] 就是字符串 444
  static void Main(string[] args)
  {
      // 字符串是用来描述世界的方式，它不能参与数学计算。
      // 因此要计算，需要先转换成合适的格式，比如 double 类型

      // 账单
      double bill = double.Parse(args[0]);
      // 小费计算
      double rate = 0.18;
      double tip = bill * rate;
      // 实际账单计算
      double realBill = bill + tip;

      // 输出
      Console.WriteLine("{0}", realBill);
  }
#+end_src

在基础代码上进行优化:
#+begin_src csharp
  // 目标:
  // 1. 让程序更健壮，避免不必要的异常抛出
  // 2. 让输出更加美观，用户体验更友好

  static void Main(string[] args)
  {
      // 声明一个变量，用来保存转换后的账单数目
      double bill;

      // 检查用户输入，如果输入不合理，给予提醒并退出程序
      // double.Parse 和 double.TryParse 都是用来将 string 类型的数据转换为 double 类型:
      //  - Parse 会在转换失败的时候抛出异常，所以如果想让程序运行良好，需要结合 try..catch 进行错误处理
      //  - TryParse 可通过返回值为 true/false 的方式判断转换成功与否，需要结合 out 参数存储转换后的值
      // if 是一种基本的程序流程，表示只有满足条件的时候，其代码块才会被执行。它是对顺序结构的补充
      // return 表示退出当前方法的运行。如果在 Main 方法中，则表示退出程序的运行
      //
      // 下面一句的意思是: 如果输入的参数不是 1 个，或者输入的参数不能转换为 double，那么提醒用户并退出
      if (args.Length != 1 || !double.TryParse(args[0], out bill))
      {
          Console.WriteLine("您的输入有误，正确的调用方法是:\nTipCalculator 账单数额");
          return;
      }

      // 小费以及实际账单的基本计算
      double rate = 0.18;
      double tip = bill * rate;
      double realBill = bill + tip;

      // 进行格式化输出，即将某个类型的数值，转换成预期格式的字符串:
      // - 使用 $ 符号，可以对变量进行内插操作
      // - 通过 {a:X} 可以使用 C# 预设的某些转换规则进行转换。比如 C 表示货币，P 表示百分比
      // - 使用 {a,N} 的方式，让转换后的字符串满足 N 的长度。如果不满足，使用空格补齐。-N 表示左对齐
      // - 可以结合使用，语法为 {a,N:X...}，比如 {rate,10:P1} 表示按照百分比显示、小数保留一位、补齐为 10 的长度
      // string.PadRight 是内置的一个字符串操作的 API，表示将字符串使用某个字符补齐为多少长度
      Console.WriteLine();
      Console.WriteLine($"账单总额: {bill,10:C}");
      Console.WriteLine($"小费数额: {tip,10:C} ({rate:P1})");
      Console.WriteLine("".PadRight(30, '┈'));
      Console.WriteLine($"账单实付: {realBill,10:C}");
  }
#+end_src

* [2021-03-10 Wed]

熟悉 VS2019，尝试创建各种类型的项目:
- 控制台应用 for .NET Framework (Console)
- 控制台应用 for .NET Core (Console)
- 窗体应用 (WinForm)
- 桌面应用程序 (WPF)
- Web 应用 (MVC)

* [2021-03-09 Tue]

采集 C# 和 dotnet 相关的招聘信息，了解企业需求，做好学习准备。

作业要求:
1. 分别在招聘网站采集广州、深圳、珠海，每个地方 10 条相关的招聘信息
2. 将上述招聘信息，汇总到 txt/markdown 文档
3. 基于上述数据，进行归纳和总结

提交要求:
- 完成后，提交给自己组长
- 组长做好审核，如果有完成不佳者，督促其进行改进
- 组长收集完成后，将所有本组作业压缩后，发送到 2132579340@qq.com *邮箱*

第一次检查:
- 总共有 10 个人未完成
- 方案: 课堂时间，继续完成

最终:
- 花了课堂上的两节课时间才全部完成
- 结论: 执行力差，主动性差，急需改善
